import PokemonDetailComponent from '../components/pokemon-detail';
import PokemonListComponent from '../components/pokemon-list';
import { PokemonList, PokemonListItem } from '../shared/entities/pokemon.entity';
import { pokemonService } from '../shared/services/pokemon.service';
import Head from 'next/head';
import { createContext, useEffect, useState } from 'react';

import type { NextPage } from 'next';
const Home: NextPage = () => {
  const [pokemonList, setPokemonList] = useState<PokemonList>();
  const [selectedPokemon, setSelectedPokemon] = useState<PokemonListItem>();
  const [favoritePokemonName, setFavoritePokemonName] = useState<string>('');

  const [status, setStatus] = useState<'idle' | 'pending' | 'resolved' | 'rejected'>('idle');

  useEffect(() => {
    fetchPokemon();
  }, []);

  function fetchPokemon(): void {
    setStatus('pending');

    pokemonService
      .getAll()
      .then(result => fetchPokemonSuccessfull(result.data))
      .catch(() => fetchPokemonFailed());
  }

  function fetchPokemonSuccessfull(result: PokemonList): void {
    setPokemonList(result);
    setSelectedPokemon(result.results[0]);
    setStatus('resolved');
  }

  function fetchPokemonFailed(): void {
    setStatus('rejected');
  }

  return (
    <div>
      <Head>
        <title>WeGroup FE assignment</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {status === 'pending' && <p>Loading</p>}

        {status === 'resolved' && (
          <div className="pokemon-container">
            <PokemonListComponent
              pokemonList={pokemonList!}
              selectedPokemon={selectedPokemon!}
              setSelectedPokemon={setSelectedPokemon}
              favoritePokemonName={favoritePokemonName}
            ></PokemonListComponent>
            <PokemonDetailComponent
              selectedPokemon={selectedPokemon!}
              favoritePokemonName={favoritePokemonName!}
              setFavoritePokemonName={setFavoritePokemonName}
            ></PokemonDetailComponent>
          </div>
        )}

        {status === 'rejected' && <p>Error</p>}
      </main>
    </div>
  );
};

export default Home;
